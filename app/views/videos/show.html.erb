<div class="vidplayergrid">
  <div id="iframecontainer">
    <div id="linkModalContainer" class="invisible">
      <div class="linkModal">
        Embedding may not be supported for this video.<br>
        View this video at its original source:<br> <a href="<%= @video.embed_url %>" target="_blank"><%= @video.embed_url %></a><br>
        If the video loads under this message, please disregard.<br>
        <button onclick="dismissLink()">Dismiss this message</button>
      </div>
    </div>
<% if ((@video.category1 == "NSFW" || @video.category2 == "NSFW") && !current_user.permission.is_horny? ) %>
    <div id="nsfwModalContainer" class="">
      <div class="nsfwModal">
        This video is hidden because you are in safe mode.<br>
        If you would like to see it, you can either turn safe mode off, or just dismiss this message to view it anyway while leaving your settings intact.<br>
                      <%= render 'permissions/nsfwform', user: current_user %>
        <button onclick="dismissNsfw()">Just show me the video</button>
      </div>
    </div>
    <% end %>

      <%= @video.embed_code.html_safe %>
  </div>
  <div>
    <div class="title full">
    <h4>
      <%= @video.title %>
    </h4>
  </div>

      <p>Posted by <%= @video.user.name %> on <%= @video.created_at.strftime("%B %e, %Y") %></p>


    <p>
      <%= @video.description %>
    </p>
    <p>
      Viewed <%= @video.plays %> times
    </p>

<p>
  <span class="category"><%= link_to @video.category1, category_path(:query => @video.category1) %></span>
  <% if !@video.category2.blank? %>
  <span class="category"><%= link_to @video.category2, category_path(:query => @video.category2) %></span>
  <% end %>
  </p>



    <p>
      <% @tags.each do |tag| %>
      <span class="tag"> <%= link_to tag, videos_tags_path(query: tag) %> </span>
      <% end %>
    </p>


  <div class="bulbs inline">
    <p>
      <% if Bulb.where("user_id = ? and bulbable_type = ? and bulbable_id = ?", current_user.id, "Video", @video.id).exists? || current_user.permission.can_bulb == false || @video.user == current_user %>

      <%= render 'bulbs/disabled', bulbable: @video, color: "green" %>
      <%= render 'bulbs/disabled', bulbable: @video, color: "red" %>
      <% else %>
<%= render 'bulbs/form', bulbable: @video, bulb: @bulb, color: "green" %>
<%= render 'bulbs/form', bulbable: @video, bulb: @bulb, color: "red" %>
<% end %>
<button class="bulbs inline" onclick="showBulbers('video',<%= @video.id %>)">?</button>

<% if current_user.permission.is_mod == true || current_user.permission.is_admin == true %>
<div class="modActions"> Mod Actions:
<%= button_to 'Delete', @video, method: :delete, data: { confirm: "Are you sure you want to delete this video? All comments on this video will also be deleted.\n\n" + @video.title + "" } %>
</div>
<% end %>

</p>
</div>
<div class="bulbers collapsed" id="videobulbers<%= @video.id %>">
  green:
  <% greenbulbers(@video).each do |bulber| %>
  <span class="bulber"><%= bulber.name %></span>
  <% end %>
  <br>
  red:
  <% redbulbers(@video).each do |bulber| %>
  <span class="bulber"><%= bulber.name %></span>
  <% end %>
</div>

  </div>
</div>
<div class="comments">
  <% if (@video.user == current_user && @video.comments.count == 0) %>
  You can't leave the first comment on your own video.
  <% else %>
  <%= render 'comments/form', comment: @comment %>
<% end %>

<%= render partial: 'comments/comment', collection: @video.comments %>

</div>
